package modelcounting.main;

import java.io.File;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import modelcounting.analysis.SequentialAnalyzer;
import modelcounting.analysis.exceptions.AnalysisException;
import modelcounting.domain.Constraints;
import modelcounting.domain.Domain;
import modelcounting.domain.LinearPolynomial;
import modelcounting.domain.Problem;
import modelcounting.domain.ProblemSetting;
import modelcounting.domain.UsageProfile;
import modelcounting.domain.VarList;
import modelcounting.domain.exceptions.InvalidUsageProfileException;
import modelcounting.latte.LatteException;
import modelcounting.latte.LatteExecutor;
import modelcounting.omega.OmegaExecutor;
import modelcounting.omega.exceptions.OmegaException;
import modelcounting.utils.BigRational;
import modelcounting.utils.Configuration;
import modelcounting.grammar.LinearConstraintsLexer;
import modelcounting.grammar.LinearConstraintsParser;
import modelcounting.grammar.OmegaParserLexer;
import modelcounting.grammar.OmegaParserParser;
import modelcounting.grammar.ProblemSettingsLexer;
import modelcounting.grammar.ProblemSettingsParser;
import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.TokenStream;
import org.apache.commons.io.FileUtils;

import com.google.common.util.concurrent.AtomicDouble;

public class Examples {

	public static void main(String[] args) throws RecognitionException, InvalidUsageProfileException, LatteException, InterruptedException, OmegaException,
			ExecutionException, AnalysisException {
		mainW(args);
	}

	public static void mainOld(String[] args) throws RecognitionException {
		String input = "domain{c0 :1,2;c1 :1,2;c2 :1,2;c3 :1,2;v4 : 0,9;v5 : 0,9;v6 : 0,9;v7 : 0,9;};usageProfile{v4 >= v5  && v5 >= v6 && v6 < v7 : 2/10;"
				+ "v4 >= v5 && v5 >= v6 && v6 >= v7 : 8/10;v5 < v6  && v4 >= v5 && v6 >= v7 : 0/10;v6 < v7  && v4 >= v5 && v5 >= v6 : 0/10; };";
		CharStream spfStream = new ANTLRStringStream(input);
		ProblemSettingsLexer lexer = new ProblemSettingsLexer(spfStream);
		TokenStream spfTokenStream = new CommonTokenStream(lexer);
		ProblemSettingsParser parser = new ProblemSettingsParser(spfTokenStream);
		ProblemSetting ps = parser.problemSettings();
		System.out.println(ps);

	}

	public static void mainSetCrash(String[] args) throws RecognitionException, InvalidUsageProfileException {
		/*
		 * String input =
		 * "v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4==v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v4==v7&&c3!=1&&v4==v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v7<=(v6-1)&&v7>=-2147483647&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=(v6+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v7<=(v6-1)&&v7>=(v4+1)&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v6+1)&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4==v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=-2147483647&&c3==1&&v4==v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&c3!=1&&v4==v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v4==v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v4==v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v4==v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3==1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3!=1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v5==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v6-1)&&v7>=-2147483647&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=(v6+1)&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=(v5+1)&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5>(v6-1)&&v5>=-2147483647&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=(v5+1)&&v7<=(v5-1)&&v7>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v6-1)&&v7>=(v5+1)&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=(v6+1)&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v6-1)&&v5>=-2147483647&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v7<=(v5-1)&&v7>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v7<=(v4-1)&&v7>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v6-1)&&v7>=(v4+1)&&v6<=2147483647&&v6>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v6+1)&&v6<=2147483647&&v6>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v6-1)&&v5>=-2147483647&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v5==v7&&c3==1&&v4==v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&c3==1&&v4==v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&c3==1&&v4==v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5==v7&&c3!=1&&v4==v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v5>v7&&v5!=v7&&c3!=1&&v4==v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v5<=v7&&v5!=v7&&c3!=1&&v4==v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v5==v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v5==v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v5==v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v4==v7&&c3!=1&&v5==v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v5==v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v5==v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3==1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3!=1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v5>v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3==1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3!=1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v5<=v6&&v5!=v6&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=(v5+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4>v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4>v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=(v4-1)&&v5>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4>v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v7<=(v6-1)&&v7>=-2147483647&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v7<=(v4-1)&&v7>=(v6+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3==1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3!=1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v5==v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v6-1)&&v7>=(v4+1)&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=(v6+1)&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v5+1)&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v6+1)&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=(v5-1)&&v6>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v5+1)&&v7<=(v5-1)&&v7>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v6-1)&&v7>=(v5+1)&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v6+1)&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<(v6+1)&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2==1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v5==v7&&c3==1&&v4==v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&c3==1&&v4==v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&c3==1&&v4==v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5==v7&&c3!=1&&v4==v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v5>v7&&v5!=v7&&c3!=1&&v4==v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v5<=v7&&v5!=v7&&c3!=1&&v4==v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v5==v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v5==v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v5==v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v4==v7&&c3!=1&&v5==v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v5==v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v5==v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3==1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3!=1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v5>v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3==1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=(v5-1)&&v7>=(v4+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3==1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v4==v7&&c3!=1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v5==v7&&v4<=v7&&v4!=v7&&c3!=1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5>v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v5<=2147483647&&v5>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v5<=v7&&v5!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v5<=v6&&v5!=v6&&v4<=v6&&v4!=v6&&c2!=1&&v5==v5&&v4<=v5&&v4!=v5&&c1==1&&c0==1&&v6<=2147483647&&v6>=-2147483647&&v6==v7&&c3==1&&c2==1&&v4==v5&&c1!=1&&c0==1&&v7<=(v6-1)&&v7>=-2147483647&&v6<=2147483647&&v6>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&c3==1&&c2==1&&v4==v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v6+1)&&v6<=2147483647&&v6>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&c3==1&&c2==1&&v4==v5&&c1!=1&&c0==1&&v6==v7&&c3!=1&&c2==1&&v4==v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=-2147483647&&v6>v7&&v6!=v7&&c3!=1&&c2==1&&v4==v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=-2147483647&&v6<=v7&&v6!=v7&&c3!=1&&c2==1&&v4==v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=-2147483647&&c3==1&&c2!=1&&v4==v5&&c1!=1&&c0==1&&c3!=1&&c2!=1&&v4==v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4==v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4==v7&&c3!=1&&v4==v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v6-1)&&v7>=-2147483647&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v4-1)&&v7>=(v6+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v6-1)&&v7>=(v4+1)&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v6+1)&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=-2147483647&&c3==1&&v4==v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&c3!=1&&v4==v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4==v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4==v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v4>v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4==v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4==v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4==v7&&c3!=1&&v4==v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4==v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v6-1)&&v7>=-2147483647&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v4-1)&&v7>=(v6+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=(v4-1)&&v6>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4>v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v6-1)&&v7>=(v4+1)&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v6+1)&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3==1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=-2147483647&&v4==v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v6==v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6>v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v6<=2147483647&&v6>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v6<=v7&&v6!=v7&&v4<=v7&&v4!=v7&&c3!=1&&v6==v6&&v4<=v6&&v4!=v6&&c2==1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=-2147483647&&c3==1&&v4==v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&c3!=1&&v4==v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4>v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4==v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4>v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4==v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=(v4-1)&&v7>=-2147483647&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4>v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v7<=2147483647&&v7>=(v4+1)&&v4<=2147483647&&v4>=-2147483647&&v7==v7&&v4<=v7&&v4!=v7&&c3==1&&v4<=v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4==v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4>v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v4<=2147483647&&v4>=-2147483647&&v4<=v7&&v4!=v7&&c3!=1&&v4<=v6&&v4!=v6&&c2!=1&&v4<=v5&&v4!=v5&&c1!=1&&c0==1&&v5<=2147483647&&v5>=-2147483647&&v5==v7&&c3==1&&v5==v6&&c2==1&&c1==1&&c0!=1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&c3==1&&v5==v6&&c2==1&&c1==1&&c0!=1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&c3==1&&v5==v6&&c2==1&&c1==1&&c0!=1&&v5==v7&&c3!=1&&v5==v6&&c2==1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v5>v7&&v5!=v7&&c3!=1&&v5==v6&&c2==1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v5<=v7&&v5!=v7&&c3!=1&&v5==v6&&c2==1&&c1==1&&c0!=1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v5==v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v6==v7&&v5>v7&&v5!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v7<=(v6-1)&&v7>=-2147483647&&v6<=(v5-1)&&v6>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v5>v7&&v5!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v7<=(v5-1)&&v7>=(v6+1)&&v6<=(v5-1)&&v6>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v5>v7&&v5!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v7<=2147483647&&v7>=(v5+1)&&v6<=(v5-1)&&v6>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&c3==1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=2147483647&&v6>=-2147483647&&v5==v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v6==v7&&v5>v7&&v5!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v6>v7&&v6!=v7&&v5>v7&&v5!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v6<=v7&&v6!=v7&&v5>v7&&v5!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=(v5-1)&&v6>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v5<=v7&&v5!=v7&&c3!=1&&v6==v6&&v5>v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v5==v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=2147483647&&v6>=(v5+1)&&v7<=(v5-1)&&v7>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v6==v7&&v5<=v7&&v5!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v7<=(v6-1)&&v7>=(v5+1)&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&v5<=v7&&v5!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v7<=2147483647&&v7>=(v6+1)&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&v5<=v7&&v5!=v7&&c3==1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=2147483647&&v6>=-2147483647&&v5==v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v5>v7&&v5!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v6==v7&&v5<=v7&&v5!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v6>v7&&v6!=v7&&v5<=v7&&v5!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v6<=2147483647&&v6>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v6<=v7&&v6!=v7&&v5<=v7&&v5!=v7&&c3!=1&&v6==v6&&v5<=v6&&v5!=v6&&c2==1&&c1==1&&c0!=1&&v7<=2147483647&&v7>=-2147483647&&c3==1&&v5==v6&&c2!=1&&c1==1&&c0!=1&&c3!=1&&v5==v6&&c2!=1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v5==v7&&c3==1&&v5>v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&c3==1&&v5>v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&c3==1&&v5>v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v5==v7&&c3!=1&&v5>v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v5>v7&&v5!=v7&&c3!=1&&v5>v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v5<=v7&&v5!=v7&&c3!=1&&v5>v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v5==v7&&c3==1&&v5<=v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v7<=(v5-1)&&v7>=-2147483647&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5>v7&&v5!=v7&&c3==1&&v5<=v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v7<=2147483647&&v7>=(v5+1)&&v5<=2147483647&&v5>=-2147483647&&v7==v7&&v5<=v7&&v5!=v7&&c3==1&&v5<=v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v5==v7&&c3!=1&&v5<=v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v5>v7&&v5!=v7&&c3!=1&&v5<=v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v5<=2147483647&&v5>=-2147483647&&v5<=v7&&v5!=v7&&c3!=1&&v5<=v6&&v5!=v6&&c2!=1&&c1==1&&c0!=1&&v6<=2147483647&&v6>=-2147483647&&v6==v7&&c3==1&&c2==1&&c1!=1&&c0!=1&&v7<=(v6-1)&&v7>=-2147483647&&v6<=2147483647&&v6>=-2147483647&&v7==v7&&v6>v7&&v6!=v7&&c3==1&&c2==1&&c1!=1&&c0!=1&&v7<=2147483647&&v7>=(v6+1)&&v6<=2147483647&&v6>=-2147483647&&v7==v7&&v6<=v7&&v6!=v7&&c3==1&&c2==1&&c1!=1&&c0!=1&&v6==v7&&c3!=1&&c2==1&&c1!=1&&c0!=1&&v6<=2147483647&&v6>=-2147483647&&v6>v7&&v6!=v7&&c3!=1&&c2==1&&c1!=1&&c0!=1&&v6<=2147483647&&v6>=-2147483647&&v6<=v7&&v6!=v7&&c3!=1&&c2==1&&c1!=1&&c0!=1&&v7<=2147483647&&v7>=-2147483647&&c3==1&&c2!=1&&c1!=1&&c0!=1&&c3!=1&&c2!=1&&c1!=1&&c0!=1"
		 * ; DummyUniformSettings dummy = new DummyUniformSettings(0, 30);
		 * ProblemSetting
		 * problemSetting=dummy.generateFromTraces(Sets.newHashSet(input));
		 * System.out.println(problemSetting);
		 * System.out.println(Integer.MAX_VALUE);
		 * System.out.println("2147483647");
		 */

		Set<Object> A = new HashSet<Object>();

		Set<Object> B = new HashSet<Object>();
		B.add("a");
		B.add("b");
		B.add("c");

		A.add(B);
		A.add(A);
		System.out.println(A.contains(A));

		System.out.println("DONE");
	}

	public static void main23(String[] args) {
		Integer a = 3;
		Integer b = 6;
		System.out.println(a.compareTo(b));

		String input = "x>0 && x!=2 && y>=0 && y<=4*x && x!=w && w>=0 && t>=s && k=0";
		int o1Score = input.split("&&").length;
		System.out.println(o1Score);
	}

	public static void maink(String[] args) throws RecognitionException {
		String input = "x>0 && x!=2 && y>=0 && y<=4*x && x!=w && w>=0 && t>=s && k=0";
		CharStream spfStream = new ANTLRStringStream(input);
		LinearConstraintsLexer spfLexer = new LinearConstraintsLexer(spfStream);
		TokenStream spfTokenStream = new CommonTokenStream(spfLexer);
		LinearConstraintsParser spfParser = new LinearConstraintsParser(spfTokenStream);
		Constraints constraints = spfParser.constraints();

		System.out.println("Parsed constraints: " + constraints);

		Set<Set<String>> dependentVars = constraints.getIndependentVarsSubSets();

		int i = 0;
		for (Set<String> cluster : dependentVars) {
			System.out.println("Cluster " + i + ":");
			System.out.println(cluster + "\n");
			i++;
		}

		System.out.println("Cluster related to x: ");
		System.out.println(constraints.getConstraintsRelatedTo("x"));
		System.out.println("DONE");
	}

	public static void mainX(String[] args) throws RecognitionException {
		String inputDomain = "domain{ \n y:5,30;\n " + "x:-4,100;\n" + "z:-10,20;\n" + "}; \n";
		String inputUP = "usageProfile{\n " + "x=0 && y>3:1/3;\n" + "x=3:2/3;\n" + "}; \n" + "";
		// String constr = "x=0 && y>3\n";
		String input = inputDomain + inputUP;
		System.out.println(input);// .replaceAll("\\s+",""));
		// String input2="x>=4&&y<=3";
		CharStream psStream = new ANTLRStringStream(input);
		ProblemSettingsLexer psLexer = new ProblemSettingsLexer(psStream);
		TokenStream psTokenStream = new CommonTokenStream(psLexer);
		ProblemSettingsParser psParser = new ProblemSettingsParser(psTokenStream);
		// Constraints cons = psParser.constraints();
		ProblemSetting output = psParser.problemSettings();
		System.out.println(output);
	}

	public static void mainZ(String[] args) throws RecognitionException {
		String input = "5+0";
		CharStream omegaStream = new ANTLRStringStream(input);
		OmegaParserLexer omegaLexer = new OmegaParserLexer(omegaStream);
		TokenStream omegaTokenStream = new CommonTokenStream(omegaLexer);
		OmegaParserParser omegaParser = new OmegaParserParser(omegaTokenStream);
		LinearPolynomial output = omegaParser.term();
		System.out.println(output);
	}

	public static void mainW(String[] args) throws RecognitionException, InvalidUsageProfileException, LatteException, InterruptedException, OmegaException,
			ExecutionException, AnalysisException {
		Domain.Builder domainBuilder = new Domain.Builder();
		domainBuilder.addVariable("x", -10, 10);
		domainBuilder.addVariable("y", -10, 10);

		Domain domain = domainBuilder.build();

		System.out.println(domain.asProblem());

		UsageProfile.Builder usageProfileBuilder = new UsageProfile.Builder();
		usageProfileBuilder.addScenario("x>=-10&&x<=10&&y>=-10&&y<=10", 1);

		UsageProfile usageProfile = usageProfileBuilder.build();

		String spfPC = "y>5&&y>=0&&x>0";

		Configuration configuration = new Configuration();
		configuration.setTemporaryDirectory("/home/anfi/Desktop/tmp/tmp2/");

		SequentialAnalyzer analyzer = new SequentialAnalyzer(configuration, domain, usageProfile, 1);

		BigRational probability = analyzer.analyzeSpfPC(spfPC);
		System.out.println(probability);

		spfPC = "x>=-100&&x<=1&&y<=x";
		probability = analyzer.analyzeSpfPC(spfPC);
		System.out.println(probability);
		/*
		 * ParallelAnalyzer parallelAnalyzer = new
		 * ParallelAnalyzer(configuration, domain, usageProfile, 3); Set<String>
		 * pcS = new HashSet<String>(); pcS.add("x>50"); pcS.add("x<=50");
		 * 
		 * BigRational parallelProb = parallelAnalyzer.analyze(pcS);
		 * System.out.println(parallelProb);
		 */
	}

	public static void mainH(String[] args) throws RecognitionException, OmegaException, LatteException, InterruptedException, IOException {
		Configuration configuration = new Configuration();
		configuration.setTemporaryDirectory("/home/anfi/Desktop/tmp/tmp1/");

		String input = "x_1_SYMINT>0&&x_1_SYMINT<=10 && x_1_SYMINT!=5 && x_1_SYMINT=x_2_SYMINT+1\n";
		CharStream spfStream = new ANTLRStringStream(input);
		LinearConstraintsLexer spfLexer = new LinearConstraintsLexer(spfStream);
		TokenStream spfTokenStream = new CommonTokenStream(spfLexer);
		LinearConstraintsParser spfParser = new LinearConstraintsParser(spfTokenStream);
		Problem spfProblem = spfParser.relation();

		VarList originalVarList = spfProblem.getVarList();

		String omegaInput = spfProblem.toExecutableOmega("Rx") + "Rx;";
		OmegaExecutor omegaExecutor = new OmegaExecutor(configuration);

		String omegaOutput = omegaExecutor.execute(omegaInput);

		CharStream omegaStream = new ANTLRStringStream(omegaOutput);
		OmegaParserLexer omegaLexer = new OmegaParserLexer(omegaStream);
		TokenStream omegaTokenStream = new CommonTokenStream(omegaLexer);
		OmegaParserParser omegaParser = new OmegaParserParser(originalVarList, omegaTokenStream);
		Set<Problem> output = omegaParser.relationEval();

		System.out.println(omegaOutput + "\n\n");

		System.out.println("Omega parsing:");
		for (Problem problem : output) {
			System.out.println(problem + "\n");
		}

		LatteExecutor latteExecutor = new LatteExecutor(configuration);
		long numOfPoint = 0;
		for (Problem simplifiedProblem : output) {
			numOfPoint += latteExecutor.execute(simplifiedProblem.toLatteInput());
		}
		FileUtils.deleteDirectory(new File(configuration.getTemporaryDirectory()));
		System.out.println("Input: " + input);
		System.out.println("Num of point: " + numOfPoint);

	}

	/*
	 * public static void mainOmega(String[] args) throws RecognitionException {
	 * 
	 * CharStream stream = new ANTLRStringStream(
	 * "{[y]:x,y_1_SIMINT>=3,5*z=x && x<k} union {[x]:x_1_SIMINT>0}\n");
	 * OmegaParserLexer lexer = new OmegaParserLexer(stream); TokenStream
	 * tokenStream = new CommonTokenStream(lexer); OmegaParserParser parser =
	 * new OmegaParserParser(tokenStream); Set<Problem> output =
	 * parser.relationEval(); System.out.println(output); }
	 * 
	 * public static void main8(String[] args) { String in=
	 * "s1(153);\ns1(224);\ns1(275);\ns1(373);\ns1(441);\ns1(497);\ns1(543);\ns1(557);\ns1(598);\ns1(610);\ns1(617);\ns1(622);\ns1(639);\ns1(663);\ns1(677);\ns1(693);\ns1(716);\ns1(721);\ns1(881);\ns1(909);\n"
	 * ; String out = in.replaceAll("s1\\((.)+\\);", "sum++;");
	 * System.out.println(out); }
	 * 
	 * public static void main7(String[] args) throws Exception{ String source =
	 * "package counting; public class OmegaCounter { public Long count(){int t1;int t2; long sum=0; for(t1 = -10000; t1 <= 10000; t1++) {\n  for(t2 = -10000; t2 <= (t1-2/2); t2++) {\n    sum++;\n  }\n} return sum;} }\n"
	 * ;
	 * 
	 * // Save source in .java file. File workingDirectory =
	 * DirectoriesHelper.generateTemporaryWorkingDirectory(); File sourceFile =
	 * new File(workingDirectory, "counting/OmegaCounter.java");
	 * sourceFile.getParentFile().mkdirs(); new
	 * FileWriter(sourceFile).append(source).close();
	 * 
	 * // Compile source file. JavaCompiler compiler =
	 * ToolProvider.getSystemJavaCompiler(); compiler.run(null, null, null,
	 * sourceFile.getPath());
	 * 
	 * // Load and instantiate compiled class. URLClassLoader classLoader =
	 * URLClassLoader.newInstance(new URL[] { workingDirectory.toURI().toURL()
	 * }); Class<?> cls = Class.forName("counting.OmegaCounter", true,
	 * classLoader); Object instance = cls.newInstance();
	 * System.out.println(instance); // Should print "test.Test@hashcode".
	 * Method myMethod = cls.getMethod("count",new Class[] {});
	 * 
	 * Long returnValue = (Long) myMethod.invoke(instance,new Object[]{});
	 * 
	 * System.out.println("The value returned from the method is:" +
	 * returnValue); }
	 * 
	 * public static void main6(String[] args) throws IOException { try {
	 * 
	 * String sourceCode=
	 * "class Testina {\n    public static String demoMethod(String demoParam) {\n        System.out.println(\"Parameter passed: \" + demoParam);\n         \n        return DemoClass.class.getName();\n    }\n}\n"
	 * ;
	 * 
	 * File source = new File("Testina.java");
	 * System.out.println(source.getName()); FileWriter fw = new
	 * FileWriter(source);
	 * 
	 * fw.write(sourceCode); fw.flush(); fw.close();
	 * 
	 * String command[] = new String[2]; command[0] = "javac"; command[1] =
	 * source.getName();
	 * 
	 * ProcessRunner processRunner = new ProcessRunner(command);
	 * processRunner.run();
	 * 
	 * System.out.println("Compiled.\nSTDOUT: "+processRunner.getStdout());
	 * System.out.println("\nSTDERR: "+processRunner.getStdout()+"\n");
	 * 
	 * 
	 * 
	 * //ClassLoader myClassLoader = ClassLoader.getSystemClassLoader();
	 * CustomClassLoader myClassLoader = new CustomClassLoader();
	 * 
	 * 
	 * // Step 2: Define a class to be loaded.
	 * 
	 * String classNameToBeLoaded = "Testina";
	 * 
	 * 
	 * // Step 3: Load the class
	 * 
	 * Class myClass = myClassLoader.loadClass(classNameToBeLoaded);
	 * 
	 * 
	 * // Step 4: create a new instance of that class
	 * 
	 * //Object whatInstance = myClass.newInstance();
	 * 
	 * String methodParameter = "a quick brown fox";
	 * 
	 * // Step 5: get the method, with proper parameter signature. // The second
	 * parameter is the parameter type. // There can be multiple parameters for
	 * the method we are trying to call, // hence the use of array.
	 * 
	 * Method myMethod = myClass.getMethod("demoMethod", new Class[] {
	 * String.class });
	 * 
	 * 
	 * // Step 6: // Calling the real method. Passing methodParameter as //
	 * parameter. You can pass multiple parameters based on // the signature of
	 * the method you are calling. Hence // there is an array.
	 * 
	 * String returnValue = (String) myMethod.invoke(null, new Object[] {
	 * methodParameter });
	 * 
	 * System.out.println("The value returned from the method is:" +
	 * returnValue); } catch (SecurityException e) { e.printStackTrace(); }
	 * catch (IllegalArgumentException e) { e.printStackTrace(); } catch
	 * (ClassNotFoundException e) { e.printStackTrace();
	 * 
	 * } catch (IllegalAccessException e) { e.printStackTrace(); } catch
	 * (NoSuchMethodException e) { e.printStackTrace(); } catch
	 * (InvocationTargetException e) { e.printStackTrace(); } }
	 * 
	 * public static class CustomClassLoader extends ClassLoader { public
	 * CustomClassLoader(){ super(CustomClassLoader.class.getClassLoader()); }
	 * 
	 * public Class loadClass(String className) throws ClassNotFoundException {
	 * return findClass(className); }
	 * 
	 * public Class findClass(String className){ byte classByte[]; Class
	 * result=null; result = (Class)classes.get(className); if(result != null){
	 * return result; }
	 * 
	 * try{ return findSystemClass(className); }catch(Exception e){ } try{
	 * //String classPath =
	 * ((String)ClassLoader.getSystemResource(className.replace
	 * ('.',File.separatorChar)+".class").getFile()).substring(1); classByte =
	 * loadClassData("Testina.class"); result =
	 * defineClass(className,classByte,0,classByte.length,null);
	 * classes.put(className,result); return result; }catch(Exception e){ return
	 * null; } }
	 * 
	 * private byte[] loadClassData(String className) throws IOException{
	 * 
	 * File f ; f = new File(className); int size = (int)f.length(); byte buff[]
	 * = new byte[size]; FileInputStream fis = new FileInputStream(f);
	 * DataInputStream dis = new DataInputStream(fis); dis.readFully(buff);
	 * dis.close(); return buff; }
	 * 
	 * private Hashtable classes = new Hashtable(); }
	 * 
	 * 
	 * public static void main5(String[] args) { String input =
	 * "{[232,32,434]}"; Pattern pattern=Pattern.compile("\\d+"); Matcher
	 * matcher = pattern.matcher(input); while(matcher.find()){
	 * System.out.println(matcher.group()); } }
	 * 
	 * public static void main4(String args[]){ Pattern p =
	 * Pattern.compile("([A-Za-z_$][A-Za-z0-9_$]*)"); Matcher m =
	 * p.matcher("x>3&& y<7 &&x+z>0"); Set<String> vars = new HashSet<String>();
	 * while(m.find()){ vars.add(m.group()); } for(String var: vars){
	 * System.out.println(var); }
	 * 
	 * }
	 * 
	 * /* public static void main3(String args[]) throws RecognitionException,
	 * LatteException { String input =
	 * "CONST_29 >= x_1_SYMINT && CONST_28 != (x_1_SYMINT + CONST_37) && CONST_28 < x_1_SYMINT && CONST_27 != (x_1_SYMINT + CONST_37) && CONST_27 < x_1_SYMINT && CONST_26 != (x_1_SYMINT + CONST_37) && CONST_26 < x_1_SYMINT && CONST_25 != (x_1_SYMINT + CONST_37) && CONST_25 < x_1_SYMINT && CONST_24 != (x_1_SYMINT + CONST_37) && CONST_24 < x_1_SYMINT && CONST_23 != (x_1_SYMINT + CONST_37) && CONST_23 < x_1_SYMINT && CONST_22 != (x_1_SYMINT + CONST_37) && CONST_22 < x_1_SYMINT && CONST_21 != (x_1_SYMINT + CONST_37) && CONST_21 < x_1_SYMINT && CONST_20 != (x_1_SYMINT + CONST_37) && CONST_20 < x_1_SYMINT && CONST_19 != (x_1_SYMINT + CONST_37) && CONST_19 < x_1_SYMINT && CONST_18 != (x_1_SYMINT + CONST_37) && CONST_18 < x_1_SYMINT && CONST_17 != (x_1_SYMINT + CONST_37) && CONST_17 < x_1_SYMINT && CONST_16 != (x_1_SYMINT + CONST_37) && CONST_16 < x_1_SYMINT && CONST_15 != (x_1_SYMINT + CONST_37) && CONST_15 < x_1_SYMINT && CONST_14 != (x_1_SYMINT + CONST_37) && CONST_14 < x_1_SYMINT && CONST_13 != (x_1_SYMINT + CONST_37) && CONST_13 < x_1_SYMINT && CONST_12 != (x_1_SYMINT + CONST_37) && CONST_12 < x_1_SYMINT && CONST_11 != (x_1_SYMINT + CONST_37) && CONST_11 < x_1_SYMINT && CONST_10 != (x_1_SYMINT + CONST_37) && CONST_10 < x_1_SYMINT && CONST_9 != (x_1_SYMINT + CONST_37) && CONST_9 < x_1_SYMINT && CONST_8 != (x_1_SYMINT + CONST_37) && CONST_8 < x_1_SYMINT && CONST_7 != (x_1_SYMINT + CONST_37) && CONST_7 < x_1_SYMINT && CONST_6 != (x_1_SYMINT + CONST_37) && CONST_6 < x_1_SYMINT && CONST_5 != (x_1_SYMINT + CONST_37) && CONST_5 < x_1_SYMINT && CONST_4 != (x_1_SYMINT + CONST_37) && CONST_4 < x_1_SYMINT && CONST_3 != (x_1_SYMINT + CONST_37) && CONST_3 < x_1_SYMINT && CONST_2 != (x_1_SYMINT + CONST_37) && CONST_2 < x_1_SYMINT && CONST_1 != (x_1_SYMINT + CONST_37) && CONST_1 < x_1_SYMINT && CONST_0 != (x_1_SYMINT + CONST_37) && CONST_0 < x_1_SYMINT"
	 * ; String clean = input.replaceAll("\\s+", ""); clean =
	 * input.replaceAll("CONST_(\\d+)", "$1"); clean = clean
	 * .replaceAll("([A-Za-z_$][A-Za-z0-9_$]*)_\\d+_SYMINT", "$1"); //clean =
	 * clean.replaceAll("&&",","); System.out.println(input + "\n" + clean);
	 * 
	 * CharStream stream = new ANTLRStringStream(
	 * "28 != (x + 37) && x>=-30 && x<=30"); LinearConstraintsLexer lexer = new
	 * LinearConstraintsLexer(stream); TokenStream tokenStream = new
	 * CommonTokenStream(lexer); LinearConstraintsParser parser = new
	 * LinearConstraintsParser( tokenStream); LinearConstraintSet lcs =
	 * parser.constraintSetEval(); System.out.println(lcs); try {
	 * Set<LinearConstraintSet> split = lcs.trivialSplitOfDisequalities();
	 * 
	 * for (LinearConstraintSet lcs1 : split) { System.out.println(lcs1);
	 * LatteTask lt = LatteTask.newLatteTask(lcs1); LatteTaskExecutor lte = new
	 * SequentialLatteExecutor(); LatteResult lr = lte.analyze(lt);
	 * System.out.println("Num of Points: " + lr.getNumberOfLatticePoints()); }
	 * } catch (MalformedLinearConstraintException e) {
	 * System.err.println("Exception: " + e.getLocalizedMessage());
	 * e.printStackTrace(); } }
	 * 
	 * public static void main2(String args[]) throws RecognitionException {
	 * String input = "2*x*4+5-y"; CharStream stream = new
	 * ANTLRStringStream(input); LinearConstraintsLexer lexer = new
	 * LinearConstraintsLexer(stream); TokenStream tokenStream = new
	 * CommonTokenStream(lexer); LinearConstraintsParser parser = new
	 * LinearConstraintsParser( tokenStream); LinearPolynomial poly =
	 * parser.expression().evaluate(); System.out.println(poly); }
	 */

	public static void main1(String[] args) throws InterruptedException {
		ExecutorService service = Executors.newFixedThreadPool(4);
		final AtomicDouble total = new AtomicDouble(0);
		Set<Callable<Double>> tasks = new HashSet<Callable<Double>>();
		for (int i = 0; i < 10; i++) {
			tasks.add(new RandomAdder(total));
		}
		service.invokeAll(tasks);
		service.shutdown();
		System.out.println("DONE " + total);
	}

	public static class RandomAdder implements Callable<Double> {
		private AtomicDouble total;

		public RandomAdder(AtomicDouble total) {
			this.total = total;
		}

		public Double call() throws Exception {
			Double randomValue = Math.random();
			total.addAndGet(randomValue);
			System.out.println("Done " + randomValue);
			return randomValue;
		}

	}
}
