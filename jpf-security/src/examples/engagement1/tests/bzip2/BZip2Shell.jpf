classpath=${jpf-security}/build/examples
sourcepath=${jpf-security}/src/examples

target=engagement1.tests.bzip2.BZip2Driver

@using jpf-security
@using jpf-symbc

shell=wcanalysis.WorstCaseAnalyzer
symbolic.min_char=0
symbolic.max_char=1
symbolic.dp=z3
#symbolic.bvlength=64

symbolic.optimizechoices=false
symbolic.worstcase.heuristic.nosolver=true;

# Set history size for the stateful decision policy
symbolic.wc.history.size=0

symbolic.worstcase.policy.inputsize=5
symbolic.worstcase.input.max=10

symbolic.worstcase.verbose=true
symbolic.worstcase.outputpath=${jpf-security}/bzip2_results

symbolic.method=engagement1.tests.bzip2.BZip2CompressorOutputStream.blockSort(),engagement1.tests.bzip2.BZip2CompressorOutputStream.mainSort(),engagement1.tests.bzip2.BZip2CompressorOutputStream.mainQSort3(con#con#con#con),engagement1.tests.bzip2.BZip2CompressorOutputStream.randomiseBlock(),engagement1.tests.bzip2.BZip2CompressorOutputStream.vswap(con#con#con#con),engagement1.tests.bzip2.BZip2CompressorOutputStream.med3(con#con#con)
symbolic.heuristic.measuredmethods=engagement1.tests.bzip2.BZip2CompressorOutputStream.blockSort(),engagement1.tests.bzip2.BZip2CompressorOutputStream.mainSort(),engagement1.tests.bzip2.BZip2CompressorOutputStream.mainQSort3(con#con#con#con),engagement1.tests.bzip2.BZip2CompressorOutputStream.randomiseBlock(),engagement1.tests.bzip2.BZip2CompressorOutputStream.vswap(con#con#con#con),engagement1.tests.bzip2.BZip2CompressorOutputStream.med3(con#con#con)

symbolic.debug=true